#!/usr/bin/env php
<?php

// npm install -g handlebars@1.3.0

$argv = $_SERVER['argv'];
$SELF = basename($argv[0]);

if (empty($argv[1])) {
    fprintf(STDOUT, "Usage: %s FILE\n", $SELF);
    exit(1);
}

$INPUT = $argv[1];

if (!is_file($INPUT)) {
    fprintf(STDERR, "%s: %s: File not found\n", $SELF, $INPUT);
    exit(1);
}

$path = pathinfo($INPUT);
$OUTPUT = empty($argv[2])
    ? dirname($INPUT) . '/' . $path['filename'] . '.js'
    : $_SERVER['argv'][2];

$indent = str_repeat(' ', 4);
$templatesDir = __DIR__ . '/../src/templates';

$t = array();

echo "Compiling templates:\n";
foreach (scandir($templatesDir) as $entry) {
    if (substr($entry, -4) !== '.hbs') {
        continue;
    }

    $templateId = substr($entry, 0, -4);

    $template = file_get_contents($templatesDir . '/' . $entry);
    $template = implode("\n",
        array_map(
            'ltrim',
            explode(
                "\n", trim($template)
            )
        )
    );

    echo '  ', $templateId, ' ... ';
    $temp = 'temp.handlebars';
    file_put_contents($temp, $template);

    $out = `handlebars --simple "$temp"`;
    $out = 'Handlebars.template(' . $out . ')';
    @unlink($temp);

    $t[$templateId] = $indent . quote($templateId) . ': ' . $out; // quote($str);
    echo "done\n";
}

function quote($x) {
    return '"' . str_replace('"', '\"', $x) . '"';
}

ksort($t);
ob_start();


echo "var Templates = {\n";
echo implode(",\n", $t), "\n";
echo "};\n";

file_put_contents($OUTPUT, ob_get_clean());
